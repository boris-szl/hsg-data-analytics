new;
cls;
rndseed 1234;
format /rd 16,4;

// TASK 1
file = "CardKrueger.csv";

// oppen data via dataopen(...) 
// returns s (string array) – data read from the CSV file.
csv_file_1 = csvReadSA(file);

// using loadd(...) function 
// Returns y (NxK matrix) – of data.
csv_file_matrix = loadd(file);
// we declare a variable name A for the matrix
X = csv_file_matrix;

// descriptive statistics
call  dstatmt(file);

// get file headers
headers = getHeaders(file);

// TASK 2


X[1:3,.]; // print first three rows of the matrix
// get wage column
dat_wage = loadd(file,"Wage");
// check if done right, by loading first three rows
dat_wage[1:3];
// get size of the column
rows(dat_wage);

// we solve this by wirting a procedure
proc(1) = delta(column_data);
    local delta, c, len;
    c = column_data;
    len = rows(c);
    delta = ( c[len]/c[1] ) - 1;
    retp(delta);
endp;

// result

print "Wage from 1992 to 1993 has changed by % " delta(dat_wage)*100;


wages_new_jersey = loadd(file);
wages_new_jersey = wages_new_jersey[., "State" "Wage"];
wages_new_jersey = selif(wages_new_jersey, wages_new_jersey[., "State"] .== 1);
wages_new_jersey = wages_new_jersey[.,"Wage"];
print "Wage from 1992 to 1993 has changed by % " delta(wages_new_jersey)*100;

// TASK 3
mean_new_jersey = meanc(wages_new_jersey);

// mean and standard deviation for pennsylvania
wages_penn = loadd(file);
wages_penn = wages_penn[., "State" "Wage"];
wages_penn = selif(wages_penn, wages_penn[., "State"] .== 0);
wages_penn = wages_penn[.,"Wage"];
print "Wage from 1992 to 1993 has changed by % " delta(wages_penn)*100;

// testing a for loop
// print fist ten rows

mu = meanc(wages_penn);
mu_2 = 4.6232;
mu_matrix = ones(rows(wages_penn),1);
rows(mu_matrix);
mu_matrix[1:3,.];

// using built in function

dstatmt(wages_penn);
dstatmt(wages_new_jersey);

// using own-defined function
print "Using function with foor loop";
print "Standard deviation of wage for Pennsylvania = " sigma(wages_penn );
print "Standard deviation of wage for New Jersey = " sigma(wages_new_jersey);
print "\n";
print "Using function without foor loop";
print "Standard deviation of wage for Pennsylvania = " sigma_without_loop(wages_penn);
print "Standard deviation of wage for New Jersey = " sigma_without_loop(wages_new_jersey);


// alternative procedure
proc(1) = sigma_without_loop(data);
    local mu, size_n, sigma_2, std_dev, mu_matrix,mad, mad_2;
    mu = meanc(data);
    size_n = rows(data);
    mu_matrix = ones(size_n,1);
    mu_matrix = mu_matrix * mu;
    mad = data - mu_matrix;
    mad_2 = mad^2;
    sigma_2 = cumsumc(mad_2);
    std_dev = sqrt(sigma_2[size_n]/size_n);
    retp(std_dev);
endp;

// procedure using for loop 
proc(1) = sigma(data);
    local mu, sigma_2, size_n, std_dev;
    mu = meanc(data);
    size_n = rows(data);
    sigma_2 = 0;
    for i (1, rows(data), 1);
        sigma_2 = sigma_2 + ((data[i] - mu)^2);
    endfor;
    std_dev = sqrt((sigma_2 / size_n));
    retp(std_dev);
endp;

end;
// get first entry
// get last entry

// Task 4
// DiD Estimator


// Task 4 OLS
formula = "FTE ~ State + Year + Year*State";
call ols(file,formula );

closeall;

end;
